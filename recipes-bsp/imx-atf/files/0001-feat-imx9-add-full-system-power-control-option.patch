From 80d8c15441aab6d2881e7df43d3d5572160d0c4a Mon Sep 17 00:00:00 2001
From: Emanuele Ghidoli <emanuele.ghidoli@toradex.com>
Date: Fri, 10 Oct 2025 09:47:36 +0200
Subject: [PATCH] feat(imx9): add full system power control option

Add an optional build-time configuration to enable full system
shutdown and reset control through SCMI.

By default, only logical machine (cluster-level) power-off and
reset are performed. When the SYS_PWR_FULL_CTRL option is set,
the PSCI implementation uses the full system power control
commands instead, allowing a complete system shutdown and reset.

Tested on iMX95 based modules.

Upstream-Status: Submitted [https://review.trustedfirmware.org/c/TF-A/trusted-firmware-a/+/44017]
Signed-off-by: Emanuele Ghidoli <emanuele.ghidoli@toradex.com>
---
 drivers/arm/css/scmi/vendor/scmi_imx9.h |  3 +++
 plat/imx/imx9/imx95/imx95_psci.c        | 12 ++++++++++--
 plat/imx/imx9/imx95/platform.mk         |  3 +++
 3 files changed, 16 insertions(+), 2 deletions(-)

diff --git a/drivers/arm/css/scmi/vendor/scmi_imx9.h b/drivers/arm/css/scmi/vendor/scmi_imx9.h
index b03dc98cd4da..e210c687d651 100644
--- a/drivers/arm/css/scmi/vendor/scmi_imx9.h
+++ b/drivers/arm/css/scmi/vendor/scmi_imx9.h
@@ -150,6 +150,9 @@
 #define SCMI_GIC_WAKEUP				1
 #define SCMI_RESUME_CPU				BIT(1)
 
+#define IMX9_SCMI_SYS_PWR_FULL_SHUTDOWN		0x80000001U
+#define IMX9_SCMI_SYS_PWR_FULL_RESET		0x80000002U
+
 struct scmi_cpu_reset_addr_a2p {
 	uint32_t cpu_id;
 	uint32_t flags;
diff --git a/plat/imx/imx9/imx95/imx95_psci.c b/plat/imx/imx9/imx95/imx95_psci.c
index 61e1514133f9..c1d5dd42557c 100644
--- a/plat/imx/imx9/imx95/imx95_psci.c
+++ b/plat/imx/imx9/imx95/imx95_psci.c
@@ -23,6 +23,14 @@
 #include <plat_imx8.h>
 #include <scmi_imx9.h>
 
+#if SYS_PWR_FULL_CTRL == 1
+#define PLAT_SCMI_SYS_PWR_SHUTDOWN	IMX9_SCMI_SYS_PWR_FULL_SHUTDOWN
+#define PLAT_SCMI_SYS_PWR_COLD_RESET	IMX9_SCMI_SYS_PWR_FULL_RESET
+#else
+#define PLAT_SCMI_SYS_PWR_SHUTDOWN	SCMI_SYS_PWR_SHUTDOWN
+#define PLAT_SCMI_SYS_PWR_COLD_RESET	SCMI_SYS_PWR_COLD_RESET
+#endif
+
 #define IMR_NUM		U(12)
 #define IMX95_A55P_IDX		6
 
@@ -758,7 +766,7 @@ void __dead2 imx_system_reset(void)
 	/* Force: work, Gracefull: not work */
 	ret = scmi_sys_pwr_state_set(imx9_scmi_handle,
 				     SCMI_SYS_PWR_FORCEFUL_REQ,
-				     SCMI_SYS_PWR_COLD_RESET);
+				     PLAT_SCMI_SYS_PWR_COLD_RESET);
 	if (ret) {
 		VERBOSE("%s failed: %d\n", __func__, ret);
 	}
@@ -815,7 +823,7 @@ void __dead2 imx_system_off(void)
 
 	ret = scmi_sys_pwr_state_set(imx9_scmi_handle,
 				     SCMI_SYS_PWR_FORCEFUL_REQ,
-				     SCMI_SYS_PWR_SHUTDOWN);
+				     PLAT_SCMI_SYS_PWR_SHUTDOWN);
 	if (ret) {
 		NOTICE("%s failed: %d\n", __func__, ret);
 	}
diff --git a/plat/imx/imx9/imx95/platform.mk b/plat/imx/imx9/imx95/platform.mk
index 08340fa7516c..0d65af12df48 100644
--- a/plat/imx/imx9/imx95/platform.mk
+++ b/plat/imx/imx9/imx95/platform.mk
@@ -60,6 +60,9 @@ PROGRAMMABLE_RESET_ADDRESS := 1
 COLD_BOOT_SINGLE_CPU := 1
 ERRATA_A55_1530923 := 1
 
+SYS_PWR_FULL_CTRL ?= 0
+$(eval $(call add_define,SYS_PWR_FULL_CTRL))
+
 BL32_BASE               ?=      0x8C000000
 BL32_SIZE               ?=      0x02000000
 $(eval $(call add_define,BL32_BASE))
-- 
2.43.0

